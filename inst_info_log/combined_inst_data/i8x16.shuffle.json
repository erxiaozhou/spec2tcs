{
    "exec_data": {
        "ctgy": "Vector",
        "raw_title": ":math:`\\K{i8x16.}\\SHUFFLE~x^\\ast`",
        "name": "i8x16.shuffle",
        "steps_part": "1. Assert: due to :ref:`validation <valid-vec-shuffle>`, two values of :ref:`value type <syntax-valtype>` |V128| are on the top of the stack.\n2. Assert: due to :ref:`validation <valid-vec-shuffle>`, for all :math:`x_i` in :math:`x^\\ast` it holds that :math:`x_i < 32`.\n3. Pop the value :math:`\\V128.\\VCONST~c_2` from the stack.\n4. Let :math:`i_2^\\ast` be the sequence :math:`\\lanes_{i8x16}(c_2)`.\n5. Pop the value :math:`\\V128.\\VCONST~c_1` from the stack.\n6. Let :math:`i_1^\\ast` be the sequence :math:`\\lanes_{i8x16}(c_1)`.\n7. Let :math:`i^\\ast` be the concatenation of the two sequences :math:`i_1^\\ast~i_2^\\ast`.\n8. Let :math:`c` be the result of :math:`\\lanes^{-1}_{i8x16}(i^\\ast[x^\\ast[0]] \\dots i^\\ast[x^\\ast[15]])`.\n9. Push the value :math:`\\V128.\\VCONST~c` onto the stack.",
        "steps": [
            "ASSERT    : [StackCondition(['stack_top', True, StackValue(Type(v128::), any, 2)])]",
            "ASSERT    : [SIMDValCondition(['simd_val', ValRefValue(Type(any::), x^\\ast, 1), constantValue(32:Type(u32::):32:False:32), '<'])]",
            "POP       : [ValRefValue(Type(v128::), c_2, 1)]",
            "LET       : [(ValRefValue(Type(any::), i_2^\\ast, 1), FormulaValue(Type(other:byte_seq:), \\lanes_{i8x16}(c_2), 1))]",
            "POP       : [ValRefValue(Type(v128::), c_1, 1)]",
            "LET       : [(ValRefValue(Type(any::), i_1^\\ast, 1), FormulaValue(Type(other:byte_seq:), \\lanes_{i8x16}(c_1), 1))]",
            "LET       : [(ValRefValue(Type(any::), i^\\ast, 1), FormulaValue(Type(other:byte_seq:), the concatenation of the two sequences :math:`i_1^\\ast~i_2^\\ast`, 1))]",
            "LET       : [(ValRefValue(Type(any::), c, 1), FormulaValue(Type(other:byte_seq:), \\lanes^{-1}_{i8x16}(i^\\ast[x^\\ast[0]] \\dots i^\\ast[x^\\ast[15]]), 1))]",
            "PUSH      : [ValRefValue(Type(v128::), c, 1)]"
        ],
        "vstack_vt_num_seq": "[[(Type(v128::), 1), -1], [(Type(v128::), 1), -1], [(Type(v128::), 1), 1]]"
    },
    "valid_data": {
        "raw_title": ":math:`\\K{i8x16.}\\SHUFFLE~\\laneidx^{16}`",
        "name": "i8x16.shuffle",
        "ctgy": "Vector",
        "steps": [
            "FOR_EACH  : ['for each step is not implemented yet']",
            "MUST_TY   : [directValidTypeCond(['inst_ty_direct_cond', [StackValue(Type(v128::), any, 1), StackValue(Type(v128::), any, 1)], [StackValue(Type(v128::), any, 1)]])]"
        ]
    },
    "imms": {
        "x^\\ast": "<x^\\ast: laneidx: 16>"
    },
    "exec_title_paras": {},
    "binary_info": [
        "<FD: hex>",
        "<13: u32>",
        "<l: laneidx: 16>"
    ]
}